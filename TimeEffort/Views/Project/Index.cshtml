@using PagedList.Mvc;
@model TimeEffort.Models.AllProjectModel
@*@model PagedList.IPagedList<TimeEffort.Models.ProjectViewModel>*@


@{
    ViewBag.Title = "List of Projects";
}


@if (Model.PMProjects.Count != 0)
{
    <h2> List of Managed Projects </h2>
   
   
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayName("№")
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UserProjects[0].Code)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UserProjects[0].ProjectName)
                </th>


                <th colspan="2">
                    Contract Money
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.UserProjects[0].ManagerName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UserProjects[0].StartDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UserProjects[0].FinishDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UserProjects[0].Status)
                </th>
            </tr>
            <tr>
                <th></th>
                <th></th>
                <th></th>
                <th>@Html.DisplayNameFor(model => model.UserProjects[0].CMoneyUsd)</th>
                <th>@Html.DisplayNameFor(model => model.UserProjects[0].CMoneyUzs)</th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        
        @{int rowNu = 0;}
          

        @foreach (var item in Model.PMProjects)
        {
            <tr>
                <td>
                    @(rowNu += 1)                    
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CMoneyUsd)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CMoneyUzs)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ManagerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FinishDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
            </tr>
        }

    </table>
    <br />
}


@if(Model.UserProjects.Count != 0){
<h2>List of Projects</h2>

<p>
</p>

using (Html.BeginForm("Index", "Project", FormMethod.Get))
{

        <div class="row">
            <div class="col-md-2">
                @Html.ActionLink("Create New Project", "Create", null, new { @class = "btn btn-sm btn-success .btn-sx" })
            </div>
            <div class="col-md-offset-7 col-sm-3">
                <b>Search by Project name</b> @Html.TextBox("SearchByPName", ViewBag.CurrentFilter as string)
                <input type="submit" value="Search" class="btn btn-sm btn-default" />
            </div>
        </div>
}



    
    <table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayName("№")
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserProjects[0].Code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserProjects[0].ProjectName)
            </th>


            <th colspan="2">
                Contract Money
            </th>

            <th>
                @Html.DisplayNameFor(model => model.UserProjects[0].ManagerName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserProjects[0].StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserProjects[0].FinishDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserProjects[0].Status)
            </th>
            <th rowspan="2"></th>
        </tr>
        <tr>
            <th></th>
            <th></th>
            <th></th>
            <th>@Html.DisplayNameFor(model => model.UserProjects[0].CMoneyUsd)</th>
            <th>@Html.DisplayNameFor(model => model.UserProjects[0].CMoneyUzs)</th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
        @*<tr>
                <th rowspan="2">
                    @Html.DisplayName("№")
                </th>
                <th rowspan="2">
                    @Html.DisplayNameFor(model => model[0].Code)
                </th>
                <th rowspan="2">
                    @Html.DisplayNameFor(model => model[0].ProjectName)
                </th>


                <th colspan="2">
                    Contract Money
                </th>

                <th rowspan="2">
                    @Html.DisplayNameFor(model => model[0].ManagerName)
                </th>
                <th rowspan="2">
                    @Html.DisplayNameFor(model => model[0].StartDate)
                </th>
                <th rowspan="2">
                    @Html.DisplayNameFor(model => model[0].FinishDate)
                </th>
                <th rowspan="2">
                    @Html.DisplayNameFor(model => model[0].Status)
                </th>
                <th rowspan="2"></th>
            </tr>
            <tr>
                <th>@Html.DisplayNameFor(model => model[0].CMoneyUsd)</th>
                <th>@Html.DisplayNameFor(model => model[0].CMoneyUzs)</th>
            </tr>*@
    </thead>
        @{int rowNo = 0;}
    @foreach (var item in Model.UserProjects)
    {
        <tr>
            <td>
                @(rowNo += 1)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Code)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProjectName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CMoneyUsd)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CMoneyUzs)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ManagerName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FinishDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-sm btn-info .btn-sx" })
            </td>
        </tr>
    }

</table>
<br />


<span>Page</span> @(Model.UserProjects.PageCount < Model.UserProjects.PageNumber ? 0 : Model.UserProjects.PageNumber) <span>of</span>@Model.UserProjects.PageCount
@Html.PagedListPager(Model.UserProjects, page => Url.Action("Index",new { page, currentFilter = ViewBag.CurrentFilter, searchByPName = ViewBag.searchByPName }))
}
