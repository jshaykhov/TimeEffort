@model TimeEffort.Models.UserViewModel
@using TimeEffort.Helper
@{
    ViewBag.Title = "Edit";
}

<h2>Edit User</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
      
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        
        <div class="form-group">
            @Html.LabelForRequired(model => model.UserName, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DisplayFor(model => model.UserName, new { @disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelForRequired(model => model.FirstName, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelForRequired(model => model.LastName, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelForRequired(model => model.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelForRequired(model => model.Phone, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Major, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Major, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Major)
            </div>
        </div>

    

        <div class="form-group">
            @Html.LabelForRequired(model => model.PositionId, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownListFor(model => model.PositionId, (SelectList)ViewBag.Positions, new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.PositionId)
            </div>
        </div>
        
        @*<div class="form-group">
            @Html.LabelFor(model => model.HasHead, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.CheckBoxFor(model => model.HasHead, new { htmlAttributes = new { @class = "form-control", @id = "hasHeadCb" } })
                @Html.ValidationMessageFor(model => model.HasHead)
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.HasHead, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                <input type="checkbox" class="checkbox checkbox-inline" />
                @*@Html.CheckBoxFor(model => model.HasHead, new { htmlAttributes = new { @class = "form-control", @id = "hasHeadCb" } })
                @Html.ValidationMessageFor(model => model.HasHead)*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelForRequired(model => model.HeadId, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownListFor(model => model.HeadId, (SelectList)ViewBag.Heads, new { @class = "form-control", @id="heads"})
                @Html.ValidationMessageFor(model => model.HeadId)
            </div>
        </div>

        

        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                <input type="button" onclick="location.href='@Url.Action("Index","User")'" value="Cancel" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    $(document).ready(function () {
        $("#hasHeadCb").click(function () {
            if ($("#hasHeadCb").attr("checked") != 'checked') {
                $("heads").prop('disabled', false)
            }
            else {
                $("heads").prop('disabled', true)
            }
        });
    });
</script>
