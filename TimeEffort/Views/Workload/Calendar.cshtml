@*@model Dictionary<TimeEffortCore.Entities.Project, List<TimeEffort.Models.CalendarDetails>>
    @{
        ViewBag.Title = "Calendar";
    }

    <h2>Calendar</h2>

    <div class="table-responsive">
        <table class="table table-bordered table-hover table-striped">

            <thead>
                <tr>
                    <th colspan="2">Week</th>
                    <th id="previous">&lt;-</th>
                    <th colspan="5"><span id ="currentWeek"> </span></th>
                    <th id="next">-&gt;</th>
                </tr>
                <tr id="weekDays">
                    <td colspan="2">Days</td>
                    <td id="Mon">Mon</td>
                    <td id="Tue">Tue</td>
                    <td id="Wed">Wed</td>
                    <td id="Thu">Thu</td>
                    <td id="Fri">Fri</td>
                    <td id="Sat">Sat</td>
                    <td id="Sun">Sun</td>
                </tr>

            </thead>
                <tr>
                    <td id="total" colspan="2">Total worked hours</td>
                    <td class="totalMon"></td>
                    <td class="totalTue"></td>
                    <td class="totalWed"></td>
                    <td class="totalThu"></td>
                    <td class="totalFri"></td>
                    <td class="totalSat"></td>
                    <td class="totalSun"></td>
                </tr>
                <tr>
                    <td id="defaultProject" rowspan="5">Default project<br>PJ-2016001</td>
                    <td>Work</td>
                    <td class="duration">@Model.FirstOrDefault(x=>x.Key.Name.Equals("Overhead")).Value.FirstOrDefault(x=>x.Type.Equals("Work (Administrative)")).Duration</td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                </tr>
                <tr>
                    <td>Training</td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                </tr>
                <tr>
                    <td>Sick leave</td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                </tr>
                <tr>
                    <td>Annual</td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                </tr>
                <tr>
                    <td>Unpaid</td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                </tr>

            <tbody id="tbody">
                <tr>
                    <td class="duration" colspan="9"></td>
                </tr>
                <tr>
                    <td rowspan="3">IPS project<br>PJ-2016001-R</td>
                    <td class="duration">Work</td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                </tr>
                <tr>
                    <td>Trainig</td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                </tr>
                <tr>
                    <td class="duration">Leave</td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                </tr>
            </tbody>
        </table>
    </div>



    <script>
        $('document').ready(function ()
        {
            var monday = getMonday(new Date());

        })

        function setAllDates(monday)
        {
            $('#Mon').text("Mon " + monday); monday.addDays(1);
            $('#Tue').text("Tue " + monday); monday.addDays(1);
            $('#Wed').text("Wed " + monday); monday.addDays(1);
            $('#Thu').text("Thu " + monday); monday.addDays(1);
            $('#Fri').text("Fri " + monday); monday.addDays(1);
            $('#Sat').text("Sat " + monday); monday.addDays(1);
            $('#Sun').text("Sun " + monday);
        }

        function DrawCalendar()
        {

        }









        function getMonday(date) {
            var day = date.getDay() || 7;
            if (day !== 1)
                date.setHours(-24 * (day - 1));
            return date;
        }

        Date.prototype.addDays = function (days) {
            var dat = new Date(this.valueOf());
            dat.setDate(dat.getDate() + days);
            return dat;
        }

    </script>*@

@model  TimeEffort.Models.CalendarReturningModel
@{
    ViewBag.Title = "Calendar";
}

<h2>Calendar</h2>

<div class="table-responsive">
    <table class="table table-bordered table-hover table-striped">
        @{decimal monTotal = 0, tueTotal = 0, wedTotal = 0, thuTotal = 0, friTotal = 0, satTotal = 0, sunTotal = 0;}
        <thead>
            <tr>
                <th colspan="2"><div style="text-align:center"><h3>Week</h3></div></th>
                <th id="previous"><div style="text-align:center"> <i class="fa fa-caret-left fa-3x"></i></div></th>
                <th colspan="5"><div style="text-align:center"><h3>@Model.Monday.ToString("dd MMM yyyy") - @Model.Monday.AddDays(6).ToString("dd MMM yyyy")</h3></div></th>
                <th id="next"><div style="text-align:center"> <i class="fa fa-caret-right fa-3x"></i></div></th>
            </tr>
            <tr id="weekDays">
                <td colspan="2" align="center">Days</td>
                <td id="Mon" align="center">Mon<br />@Model.Monday.ToString("dd MMMM")</td>
                <td id="Tue" align="center">Tue<br />@Model.Monday.AddDays(1).ToString("dd MMMM")</td>
                <td id="Wed" align="center">Wed<br />@Model.Monday.AddDays(2).ToString("dd MMMM")</td>
                <td id="Thu" align="center">Thu<br />@Model.Monday.AddDays(3).ToString("dd MMMM")</td>
                <td id="Fri" align="center">Fri<br />@Model.Monday.AddDays(4).ToString("dd MMMM")</td>
                <td id="Sat" align="center">Sat<br />@Model.Monday.AddDays(5).ToString("dd MMMM")</td>
                <td id="Sun" align="center">Sun<br />@Model.Monday.AddDays(6).ToString("dd MMMM")</td>
            </tr>

        </thead>
        <tr>
            <td id="defaultProject" rowspan="5">Default project<br>PJ-2016001</td>
            <td>Work</td>
            @{TimeEffortCore.Entities.Workload item;}
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Work (Administrative)").FirstOrDefault(x => x.Date == Model.Monday);}
                @if (item != null)
                {
                    monTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Work (Administrative)").FirstOrDefault(x => x.Date == Model.Monday.AddDays(1));}
                @if (item != null)
                {
                    tueTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Work (Administrative)").FirstOrDefault(x => x.Date == Model.Monday.AddDays(2));}
                @if (item != null)
                {
                    wedTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Work (Administrative)").FirstOrDefault(x => x.Date == Model.Monday.AddDays(3));}
                @if (item != null)
                {
                    thuTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Work (Administrative)").FirstOrDefault(x => x.Date == Model.Monday.AddDays(4));}
                @if (item != null)
                {
                    friTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Work (Administrative)").FirstOrDefault(x => x.Date == Model.Monday.AddDays(5));}
                @if (item != null)
                {
                    satTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Work (Administrative)").FirstOrDefault(x => x.Date == Model.Monday.AddDays(6));}
                @if (item != null)
                {
                    sunTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
        </tr>
        <tr>
            <td>Training</td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Training").FirstOrDefault(x => x.Date == Model.Monday);}
                @if (item != null)
                {
                    monTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Training").FirstOrDefault(x => x.Date == Model.Monday.AddDays(1));}
                @if (item != null)
                {
                    tueTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Training").FirstOrDefault(x => x.Date == Model.Monday.AddDays(2));}
                @if (item != null)
                {
                    wedTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Training").FirstOrDefault(x => x.Date == Model.Monday.AddDays(3));}
                @if (item != null)
                {
                    thuTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Training").FirstOrDefault(x => x.Date == Model.Monday.AddDays(4));}
                @if (item != null)
                {
                    friTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Training").FirstOrDefault(x => x.Date == Model.Monday.AddDays(5));}
                @if (item != null)
                {
                    satTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Training").FirstOrDefault(x => x.Date == Model.Monday.AddDays(6));}
                @if (item != null)
                {
                    sunTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>

        </tr>
        <tr>
            <td>Sick leave</td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Sick leave").FirstOrDefault(x => x.Date == Model.Monday);}
                @if (item != null)
                {
                    monTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Sick leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(1));}
                @if (item != null)
                {
                    tueTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Sick leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(2));}
                @if (item != null)
                {
                    wedTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Sick leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(3));}
                @if (item != null)
                {
                    thuTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Sick leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(4));}
                @if (item != null)
                {
                    friTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Sick leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(5));}
                @if (item != null)
                {
                    satTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Sick leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(6));}
                @if (item != null)
                {
                    sunTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
        </tr>
        <tr>
            <td>Annual</td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Annual leave").FirstOrDefault(x => x.Date == Model.Monday);}
                @if (item != null)
                {
                    monTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Annual leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(1));}
                @if (item != null)
                {
                    tueTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Annual leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(2));}
                @if (item != null)
                {
                    wedTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Annual leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(3));}
                @if (item != null)
                {
                    thuTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Annual leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(4));}
                @if (item != null)
                {
                    friTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Annual leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(5));}
                @if (item != null)
                {
                    satTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Annual leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(6));}
                @if (item != null)
                {
                    sunTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
        </tr>
        <tr>
            <td>Unpaid</td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Unpaid leave").FirstOrDefault(x => x.Date == Model.Monday);}
                @if (item != null)
                {
                    monTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Unpaid leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(1));}
                @if (item != null)
                {
                    tueTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Unpaid leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(2));}
                @if (item != null)
                {
                    wedTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Unpaid leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(3));}
                @if (item != null)
                {
                    thuTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Unpaid leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(4));}
                @if (item != null)
                {
                    friTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Unpaid leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(5));}
                @if (item != null)
                {
                    satTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Unpaid leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(6));}
                @if (item != null)
                {
                    sunTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
        </tr>

        <tbody id="tbody">
            @{var list = Model.Workloads.FindAll(x => x.ProjectID != 0).GroupBy(x => x.Project);}

            @foreach (var litem in list)
            {
                <tr>
                    <td class="duration" colspan="9"></td>
                </tr>
                <tr>
                    <td>@litem.ElementAt(0).Project.Name<br>@litem.ElementAt(0).Project.Code</td>
                    <td class="duration">Work</td>
                    <td class="duration">
                        @{item = Model.Workloads.Where(x => x.ProjectID == litem.ElementAt(0).Project.ID).FirstOrDefault(x => x.Date == Model.Monday);}
                        @if (item != null)
                        {
                            monTotal += item.Duration;
                            @(item.Duration.ToString("0.#"))
                        }
                    </td>
                    <td class="duration">
                        @{item = Model.Workloads.Where(x => x.ProjectID == litem.ElementAt(0).Project.ID).FirstOrDefault(x => x.Date == Model.Monday.AddDays(1));}
                        @if (item != null)
                        {
                            tueTotal += item.Duration;
                            @(item.Duration.ToString("0.#"))
                        }
                    </td>
                    <td class="duration">
                        @{item = Model.Workloads.Where(x => x.ProjectID == litem.ElementAt(0).Project.ID).FirstOrDefault(x => x.Date == Model.Monday.AddDays(2));}
                        @if (item != null)
                        {
                            wedTotal += item.Duration;
                            @(item.Duration.ToString("0.#"))
                        }
                    </td>
                    <td class="duration">
                        @{item = Model.Workloads.Where(x => x.ProjectID == litem.ElementAt(0).Project.ID).FirstOrDefault(x => x.Date == Model.Monday.AddDays(3));}
                        @if (item != null)
                        {
                            thuTotal += item.Duration;
                            @(item.Duration.ToString("0.#"))
                        }
                    </td>
                    <td class="duration">
                        @{item = Model.Workloads.Where(x => x.ProjectID == litem.ElementAt(0).Project.ID).FirstOrDefault(x => x.Date == Model.Monday.AddDays(4));}
                        @if (item != null)
                        {
                            friTotal += item.Duration;
                            @(item.Duration.ToString("0.#"))
                        }
                    </td>
                    <td class="duration">
                        @{item = Model.Workloads.Where(x => x.ProjectID == litem.ElementAt(0).Project.ID).FirstOrDefault(x => x.Date == Model.Monday.AddDays(5));}
                        @if (item != null)
                        {
                            satTotal += item.Duration;
                            @(item.Duration.ToString("0.#"))
                        }
                    </td>
                    <td class="duration">
                        @{item = Model.Workloads.Where(x => x.ProjectID == litem.ElementAt(0).Project.ID).FirstOrDefault(x => x.Date == Model.Monday.AddDays(6));}
                        @if (item != null)
                        {
                            sunTotal += item.Duration;
                            @(item.Duration.ToString("0.#"))
                        }
                    </td>
                </tr>
            }
            <tr>
                <td id="total" colspan="2" align="right">Total worked hours</td>
                <td id="totalMon">@(monTotal.ToString("0.#"))</td>
                <td id="totalTue">@(tueTotal.ToString("0.#"))</td>
                <td id="totalWed">@(wedTotal.ToString("0.#"))</td>
                <td id="totalThu">@(thuTotal.ToString("0.#"))</td>
                <td id="totalFri">@(friTotal.ToString("0.#"))</td>
                <td id="totalSat">@(satTotal.ToString("0.#"))</td>
                <td id="totalSun">@(sunTotal.ToString("0.#"))</td>
            </tr>
        </tbody>
    </table>
</div>



<script>
    $('document').ready(function () {
        var monday = getMonday(new Date());

    })

    function setAllDates(monday) {
        $('#Mon').text("Mon " + monday); monday.addDays(1);
        $('#Tue').text("Tue " + monday); monday.addDays(1);
        $('#Wed').text("Wed " + monday); monday.addDays(1);
        $('#Thu').text("Thu " + monday); monday.addDays(1);
        $('#Fri').text("Fri " + monday); monday.addDays(1);
        $('#Sat').text("Sat " + monday); monday.addDays(1);
        $('#Sun').text("Sun " + monday);
    }

    function DrawCalendar() {

    }









    function getMonday(date) {
        var day = date.getDay() || 7;
        if (day !== 1)
            date.setHours(-24 * (day - 1));
        return date;
    }

    Date.prototype.addDays = function (days) {
        var dat = new Date(this.valueOf());
        dat.setDate(dat.getDate() + days);
        return dat;
    }

</script>
