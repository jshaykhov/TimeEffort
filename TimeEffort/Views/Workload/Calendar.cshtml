@*@model Dictionary<TimeEffortCore.Entities.Project, List<TimeEffort.Models.CalendarDetails>>
    @{
        ViewBag.Title = "Calendar";
    }

    <h2>Calendar</h2>

    <div class="table-responsive">
        <table class="table table-bordered table-hover table-striped">

            <thead>
                <tr>
                    <th colspan="2">Week</th>
                    <th id="previous">&lt;-</th>
                    <th colspan="5"><span id ="currentWeek"> </span></th>
                    <th id="next">-&gt;</th>
                </tr>
                <tr id="weekDays">
                    <td colspan="2">Days</td>
                    <td id="Mon">Mon</td>
                    <td id="Tue">Tue</td>
                    <td id="Wed">Wed</td>
                    <td id="Thu">Thu</td>
                    <td id="Fri">Fri</td>
                    <td id="Sat">Sat</td>
                    <td id="Sun">Sun</td>
                </tr>

            </thead>
                <tr>
                    <td id="total" colspan="2">Total worked hours</td>
                    <td class="totalMon"></td>
                    <td class="totalTue"></td>
                    <td class="totalWed"></td>
                    <td class="totalThu"></td>
                    <td class="totalFri"></td>
                    <td class="totalSat"></td>
                    <td class="totalSun"></td>
                </tr>
                <tr>
                    <td id="defaultProject" rowspan="5">Default project<br>PJ-2016001</td>
                    <td>Work</td>
                    <td class="duration">@Model.FirstOrDefault(x=>x.Key.Name.Equals("Overhead")).Value.FirstOrDefault(x=>x.Type.Equals("Work (Administrative)")).Duration</td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                </tr>
                <tr>
                    <td>Training</td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                </tr>
                <tr>
                    <td>Sick leave</td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                </tr>
                <tr>
                    <td>Annual</td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                </tr>
                <tr>
                    <td>Unpaid</td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                </tr>

            <tbody id="tbody">
                <tr>
                    <td colspan="9"></td>
                </tr>
                <tr>
                    <td rowspan="3">IPS project<br>PJ-2016001-R</td>
                    <td class="duration">Work</td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                </tr>
                <tr>
                    <td>Trainig</td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                </tr>
                <tr>
                    <td class="duration">Leave</td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                    <td class="duration"></td>
                </tr>
            </tbody>
        </table>
    </div>



    <script>
        $('document').ready(function ()
        {
            var monday = getMonday(new Date());

        })

        function setAllDates(monday)
        {
            $('#Mon').text("Mon " + monday); monday.addDays(1);
            $('#Tue').text("Tue " + monday); monday.addDays(1);
            $('#Wed').text("Wed " + monday); monday.addDays(1);
            $('#Thu').text("Thu " + monday); monday.addDays(1);
            $('#Fri').text("Fri " + monday); monday.addDays(1);
            $('#Sat').text("Sat " + monday); monday.addDays(1);
            $('#Sun').text("Sun " + monday);
        }

        function DrawCalendar()
        {

        }









        function getMonday(date) {
            var day = date.getDay() || 7;
            if (day !== 1)
                date.setHours(-24 * (day - 1));
            return date;
        }

        Date.prototype.addDays = function (days) {
            var dat = new Date(this.valueOf());
            dat.setDate(dat.getDate() + days);
            return dat;
        }

    </script>*@

@model  TimeEffort.Models.CalendarReturningModel
@{
    ViewBag.Title = "Calendar";
}


<h2>Calendar</h2> <span class="hidden" id="mondayHidden">@Model.Monday</span>

<div class="table-responsive">
    <table class="table table-bordered table-hover table-striped">
        @{decimal monTotal = 0, tueTotal = 0, wedTotal = 0, thuTotal = 0, friTotal = 0, satTotal = 0, sunTotal = 0;}
        <thead>
            <tr>
                <th colspan="2"><div style="text-align:center"><h3>Week</h3></div></th>
                <th id="previous">
                    @{var tempDatePrev = Model.Monday.AddDays(-7);
                    var tempDateNext = Model.Monday.AddDays(7);}
                    <div style="text-align:center">
                        @using (Html.BeginForm("DiffCalendar", "Workload", FormMethod.Get))
                        {

                            <input type="hidden" name="today" id="today" value="@Model.Monday.AddDays(-7).ToString("dd.MM.yyyy")" />
                            <button type="submit"><i class="fa fa-caret-left fa-3x"></i></button>
                        }
                    </div>
                </th>
                <th colspan="5"><div style="text-align:center"><h3>@Model.Monday.ToString("dd MMM yyyy") - @Model.Monday.AddDays(6).ToString("dd MMM yyyy")</h3></div></th>
                <th id="next">
                    <div style="text-align:center">
                        @using (Html.BeginForm("DiffCalendar", "Workload", FormMethod.Get))
                        {

                            <input type="hidden" name="today" id="today" value="@Model.Monday.AddDays(7).ToString("dd.MM.yyyy")" />
                            <button type="submit"><i class="fa fa-caret-right fa-3x"></i></button>
                        }
                    </div>
                </th>
            </tr>
            <tr id="weekDays">
                <td colspan="2" align="center">Days</td>
                <td id="Mon" align="center">Mon<br />@Model.Monday.ToString("dd MMMM")</td>
                <td id="Tue" align="center">Tue<br />@Model.Monday.AddDays(1).ToString("dd MMMM")</td>
                <td id="Wed" align="center">Wed<br />@Model.Monday.AddDays(2).ToString("dd MMMM")</td>
                <td id="Thu" align="center">Thu<br />@Model.Monday.AddDays(3).ToString("dd MMMM")</td>
                <td id="Fri" align="center">Fri<br />@Model.Monday.AddDays(4).ToString("dd MMMM")</td>
                <td id="Sat" align="center">Sat<br />@Model.Monday.AddDays(5).ToString("dd MMMM")</td>
                <td id="Sun" align="center">Sun<br />@Model.Monday.AddDays(6).ToString("dd MMMM")</td>
            </tr>

        </thead>
        <tbody id="tbody">
            <tr>
                <td id="Work (Administrative)" rowspan="5">Default project<br>PJ-2016001</td>
                <td>Work</td>
                @{TimeEffortCore.Entities.Workload item;}
                <td class="duration" id="monForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Work (Administrative)").FirstOrDefault(x => x.Date == Model.Monday);}
                    @if (item != null)
                    {
                        monTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="tueForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Work (Administrative)").FirstOrDefault(x => x.Date == Model.Monday.AddDays(1));}
                    @if (item != null)
                    {
                        tueTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="wedForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Work (Administrative)").FirstOrDefault(x => x.Date == Model.Monday.AddDays(2));}
                    @if (item != null)
                    {
                        wedTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="thuForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Work (Administrative)").FirstOrDefault(x => x.Date == Model.Monday.AddDays(3));}
                    @if (item != null)
                    {
                        thuTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="friForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Work (Administrative)").FirstOrDefault(x => x.Date == Model.Monday.AddDays(4));}
                    @if (item != null)
                    {
                        friTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="satForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Work (Administrative)").FirstOrDefault(x => x.Date == Model.Monday.AddDays(5));}
                    @if (item != null)
                    {
                        satTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="sunForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Work (Administrative)").FirstOrDefault(x => x.Date == Model.Monday.AddDays(6));}
                    @if (item != null)
                    {
                        sunTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
            </tr>
            <tr>
                <td id="Training">Training</td>
                <td class="duration" id="monForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Training").FirstOrDefault(x => x.Date == Model.Monday);}
                    @if (item != null)
                    {
                        monTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="tueForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Training").FirstOrDefault(x => x.Date == Model.Monday.AddDays(1));}
                    @if (item != null)
                    {
                        tueTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="wedForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Training").FirstOrDefault(x => x.Date == Model.Monday.AddDays(2));}
                    @if (item != null)
                    {
                        wedTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="thuForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Training").FirstOrDefault(x => x.Date == Model.Monday.AddDays(3));}
                    @if (item != null)
                    {
                        thuTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="friForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Training").FirstOrDefault(x => x.Date == Model.Monday.AddDays(4));}
                    @if (item != null)
                    {
                        friTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="satForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Training").FirstOrDefault(x => x.Date == Model.Monday.AddDays(5));}
                    @if (item != null)
                    {
                        satTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="sunForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Training").FirstOrDefault(x => x.Date == Model.Monday.AddDays(6));}
                    @if (item != null)
                    {
                        sunTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>

            </tr>
            <tr>
                <td id="Sick leave">Sick leave</td>
                <td class="duration" id="monForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Sick leave").FirstOrDefault(x => x.Date == Model.Monday);}
                    @if (item != null)
                    {
                        monTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="tueForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Sick leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(1));}
                    @if (item != null)
                    {
                        tueTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="wedForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Sick leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(2));}
                    @if (item != null)
                    {
                        wedTotal += item.Duration;@(item.Duration.ToString("#.#"))
                    }
                </td>
                <td class="duration" id="thuForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Sick leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(3));}
                    @if (item != null)
                    {
                        thuTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="friForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Sick leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(4));}
                    @if (item != null)
                    {
                        friTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="satForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Sick leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(5));}
                    @if (item != null)
                    {
                        satTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="sunForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Sick leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(6));}
                    @if (item != null)
                    {
                        sunTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
            </tr>
            <tr>
                <td id="Annual">Annual</td>
                <td class="duration" id="monForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Annual leave").FirstOrDefault(x => x.Date == Model.Monday);}
                    @if (item != null)
                    {
                        monTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="tueForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Annual leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(1));}
                    @if (item != null)
                    {
                        tueTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="wedForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Annual leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(2));}
                    @if (item != null)
                    {
                        wedTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="thuForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Annual leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(3));}
                    @if (item != null)
                    {
                        thuTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="friForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Annual leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(4));}
                    @if (item != null)
                    {
                        friTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="satForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Annual leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(5));}
                    @if (item != null)
                    {
                        satTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="sunForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Annual leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(6));}
                    @if (item != null)
                    {
                        sunTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
            </tr>
            <tr>
                <td id="Unpaid">Unpaid</td>
                <td class="duration" id="monForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Unpaid leave").FirstOrDefault(x => x.Date == Model.Monday);}
                    @if (item != null)
                    {
                        monTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="tueForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Unpaid leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(1));}
                    @if (item != null)
                    {
                        tueTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="wedForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Unpaid leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(2));}
                    @if (item != null)
                    {
                        wedTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="thuForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Unpaid leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(3));}
                    @if (item != null)
                    {
                        thuTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="friForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Unpaid leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(4));}
                    @if (item != null)
                    {
                        friTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="satForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Unpaid leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(5));}
                    @if (item != null)
                    {
                        satTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
                <td class="duration" id="sunForTotal">
                    @{item = Model.Workloads.Where(x => x.ProjectID == 0 && x.WorkloadType.Name == "Unpaid leave").FirstOrDefault(x => x.Date == Model.Monday.AddDays(6));}
                    @if (item != null)
                    {
                        sunTotal += item.Duration;
                        @(item.Duration.ToString("0.#"))
                    }
                </td>
            </tr>



            @foreach (var project in Model.Projects)
            {
                <tr>
                    <td colspan="9"></td>
                </tr>
                <tr>
                    <td id="@(project.ID)">@project.Name<br>@project.Code</td>
                    <td class="duration">Work</td>
                    <td class="duration" id="monForTotal">
                        @{item = Model.Workloads.Where(x => x.ProjectID == project.ID).FirstOrDefault(x => x.Date == Model.Monday);}
                        @if (item != null)
                        {
                            monTotal += item.Duration;
                            @(item.Duration.ToString("0.#"))
                        }
                    </td>
                    <td class="duration" id="tueForTotal">
                        @{item = Model.Workloads.Where(x => x.ProjectID == project.ID).FirstOrDefault(x => x.Date == Model.Monday.AddDays(1));}
                        @if (item != null)
                        {
                            tueTotal += item.Duration;
                            @(item.Duration.ToString("0.#"))
                        }
                    </td>
                    <td class="duration" id="wedForTotal">
                        @{item = Model.Workloads.Where(x => x.ProjectID == project.ID).FirstOrDefault(x => x.Date == Model.Monday.AddDays(2));}
                        @if (item != null)
                        {
                            wedTotal += item.Duration;
                            @(item.Duration.ToString("0.#"))
                        }
                    </td>
                    <td class="duration" id="thuForTotal">
                        @{item = Model.Workloads.Where(x => x.ProjectID == project.ID).FirstOrDefault(x => x.Date == Model.Monday.AddDays(3));}
                        @if (item != null)
                        {
                            thuTotal += item.Duration;
                            @(item.Duration.ToString("0.#"))
                        }
                    </td>
                    <td class="duration" id="friForTotal">
                        @{item = Model.Workloads.Where(x => x.ProjectID == project.ID).FirstOrDefault(x => x.Date == Model.Monday.AddDays(4));}
                        @if (item != null)
                        {
                            friTotal += item.Duration;
                            @(item.Duration.ToString("0.#"))
                        }
                    </td>
                    <td class="duration" id="satForTotal">
                        @{item = Model.Workloads.Where(x => x.ProjectID == project.ID).FirstOrDefault(x => x.Date == Model.Monday.AddDays(5));}
                        @if (item != null)
                        {
                            satTotal += item.Duration;
                            @(item.Duration.ToString("0.#"))
                        }
                    </td>
                    <td class="duration" id="sunForTotal">
                        @{item = Model.Workloads.Where(x => x.ProjectID == project.ID).FirstOrDefault(x => x.Date == Model.Monday.AddDays(6));}
                        @if (item != null)
                        {
                            sunTotal += item.Duration;
                            @(item.Duration.ToString("0.#"))
                        }
                    </td>
                </tr>
            }

            <tr>
                <td id="total" colspan="2" align="right">Total worked hours</td>
                <td id="totalMon">@(monTotal.ToString("0.#"))</td>
                <td id="totalTue">@(tueTotal.ToString("0.#"))</td>
                <td id="totalWed">@(wedTotal.ToString("0.#"))</td>
                <td id="totalThu">@(thuTotal.ToString("0.#"))</td>
                <td id="totalFri">@(friTotal.ToString("0.#"))</td>
                <td id="totalSat">@(satTotal.ToString("0.#"))</td>
                <td id="totalSun">@(sunTotal.ToString("0.#"))</td>
            </tr>
        </tbody>
    </table>

</div>


<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Time effort</h4>
            </div>
            <div class="modal-body">
                <span id="message">Your input cannot be more than 24 or less than 0.5 hours. Please try again.</span>
            </div>
        </div>
    </div>
</div>




<script>
    $(window).keydown(function (event) {
        //ловим событие нажатия клавиши
        if (event.keyCode == 13) {	//если это Enter
            $('#edit').blur();	//снимаем фокус с поля ввода
        }
    });
    $(function () {
        $('.duration').click(function (e) {
            //ловим элемент, по которому кликнули
            var t = e.target || e.srcElement;
            //получаем название тега
            var elm_name = t.tagName.toLowerCase();
            //если это инпут - ничего не делаем
            if (elm_name == 'input') { return false; }
            var valu = $(this).html().trim().replace(",", ".");;
            var code = '<input type="number" id="edit" value="' + valu + '" min="0.5" max="24" step="0.5" style="width: 4em" />';
            $(this).empty().append(code);
            $('#edit').focus();
            $('#edit').blur(function () {
                var val = $(this).val();
                if (checkInput(val)) {
                    var w = t.parentElement.children[0].id;
                    var day = 0;
                    if (w == "Training" || w == "Work (Administrative)" || w == "Sick leave" || w == "Annual" || w == "Unpaid")
                        day = t.cellIndex;
                    else
                        day = t.cellIndex - 1;
                    if (sendData(val, day, w) == false) {
                        $(this).parent().empty().html(valu);
                        return false;
                    }

                    if (val == "0")
                        val = "";
                    $(this).parent().empty().html(val);

                }
                calculateTotals();
                if (val == "0")
                    val = "";
                $(this).parent().empty().html(val);
            });
        });
    });



    function checkInput(hours) {
        if (hours > 24) {
            $('#message').text("Your input cannot be more than 24 hours per day. Please try again.");
            $('#myModal').modal('show');
            return false
        }
        else if (hours < 0) {
            $('#message').text("Your input cannot be less than 0. Please try again");
            $('#myModal').modal('show');
            return false;
        }
        return true;
    }


    function sendData(value, day, w) {
        if (value == "")
            value = 0;
        if (w == "Work (Administrative)")
            day -= 1;

        var total = 0;
        switch (day) {
            case 1:
                total += parseFloat($('#totalMon').text().replace(",", "."));
                break;
            case 2:
                total += parseFloat($('#totalTue').text().replace(",", "."));
                break;
            case 3:
                total += parseFloat($('#totalWed').text().replace(",", "."));
                break;
            case 4:
                total += parseFloat($('#totalThu').text().replace(",", "."));
                break;
            case 5:
                total += parseFloat($('#totalFri').text().replace(",", "."));
                break;
            case 6:
                total += parseFloat($('#totalSat').text().replace(",", "."));
                break;
            case 7:
                total += parseFloat($('#totalSun').text().replace(",", "."));
                break;
        }

        if ((total + parseInt(value)) > 24) {
            $('#message').text("Your cannot work more than 24 hours per day. Please try again");
            $('#myModal').modal('show');
            return false;
        }

        var requestData = {
            WorkloadName: w,
            EnteredValue: value,
            WeekDate: day,
            Monday: $('#mondayHidden').text()
        };


        $.ajax({
            url: '/Workload/ReceiveDataAjax',
            type: 'POST',
            data: JSON.stringify(requestData),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            error: function (xhr) {
                alert('Error: ' + xhr.statusText);
            },
            success: function (response) {
                if (response.success) {
                    $('#message').text("Saved successfully.");
                    $('#myModal').modal('show');
                    return true;
                }
                else {
                    if (response.reason == 0) {
                        return false;
                    }
                    $('#message').text(response.reason);
                    $('#myModal').modal('show');
                    return false;
                }

            },
            async: true,
            processData: false
        });
    }

    function calculateTotals() {
        $('#totalMon').text("");
        $('#totalTue').text("");
        $('#totalWed').text("");
        $('#totalThu').text("");
        $('#totalFri').text("");
        $('#totalSat').text("");
        $('#totalSun').text("");

        var temp = 0;
        $("[id=monForTotal]").each(function (i, el) {
            var tempValue = el.textContent.trim();
            if (tempValue != "")
                temp += parseFloat(tempValue.replace(",", "."));
        });
        $('#totalMon').text(temp);

        temp = 0;
        $("[id=tueForTotal]").each(function (i, el) {
            var tempValue = el.textContent.trim();
            if (tempValue != "")
                temp += parseFloat(tempValue.replace(",", "."));
        });
        $('#totalTue').text(temp);

        temp = 0;
        $("[id=wedForTotal]").each(function (i, el) {
            var tempValue = el.textContent.trim();
            if (tempValue != "")
                temp += parseFloat(tempValue.replace(",", "."));
        });
        $('#totalWed').text(temp);

        temp = 0;
        $("[id=thuForTotal]").each(function (i, el) {
            var tempValue = el.textContent.trim();
            if (tempValue != "")
                temp += parseFloat(tempValue.replace(",", "."));
        });
        $('#totalThu').text(temp);

        temp = 0;
        $("[id=friForTotal]").each(function (i, el) {
            var tempValue = el.textContent.trim();
            if (tempValue != "")
                temp += parseFloat(tempValue.replace(",", "."));
        });
        $('#totalFri').text(temp);

        temp = 0;
        $("[id=satForTotal]").each(function (i, el) {
            var tempValue = el.textContent.trim();
            if (tempValue != "")
                temp += parseFloat(tempValue.replace(",", "."));
        });
        $('#totalSat').text(temp);

        temp = 0;
        $("[id=sunForTotal]").each(function (i, el) {
            var tempValue = el.textContent.trim();
            if (tempValue != "")
                temp += parseFloat(tempValue.replace(",", "."));
        });
        $('#totalSun').text(temp);


    }

    function setAllDates(monday) {
        $('#Mon').text("Mon " + monday); monday.addDays(1);
        $('#Tue').text("Tue " + monday); monday.addDays(1);
        $('#Wed').text("Wed " + monday); monday.addDays(1);
        $('#Thu').text("Thu " + monday); monday.addDays(1);
        $('#Fri').text("Fri " + monday); monday.addDays(1);
        $('#Sat').text("Sat " + monday); monday.addDays(1);
        $('#Sun').text("Sun " + monday);
    }

    function DrawCalendar() {

    }

    function Previous(date) {
        window.location.href = "/Workload/Calendar?date=" + date
    }

    function getMonday(date) {
        var day = date.getDay() || 7;
        if (day !== 1)
            date.setHours(-24 * (day - 1));
        return date;
    }

    Date.prototype.addDays = function (days) {
        var dat = new Date(this.valueOf());
        dat.setDate(dat.getDate() + days);
        return dat;
    }
</script>












@*@{var list = Model.Workloads.FindAll(x => x.ProjectID != 0).GroupBy(x => x.Project);}*@

@*@foreach (var litem in list)
    {
        <tr>
            <td colspan="9"></td>
        </tr>
        <tr>
            <td>@litem.ElementAt(0).Project.Name<br>@litem.ElementAt(0).Project.Code</td>
            <td class="duration">Work</td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == litem.ElementAt(0).Project.ID).FirstOrDefault(x => x.Date == Model.Monday);}
                @if (item != null)
                {
                    monTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == litem.ElementAt(0).Project.ID).FirstOrDefault(x => x.Date == Model.Monday.AddDays(1));}
                @if (item != null)
                {
                    tueTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == litem.ElementAt(0).Project.ID).FirstOrDefault(x => x.Date == Model.Monday.AddDays(2));}
                @if (item != null)
                {
                    wedTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td>
                @{item = Model.Workloads.Where(x => x.ProjectID == litem.ElementAt(0).Project.ID).FirstOrDefault(x => x.Date == Model.Monday.AddDays(3));}
                @if (item != null)
                {
                    thuTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == litem.ElementAt(0).Project.ID).FirstOrDefault(x => x.Date == Model.Monday.AddDays(4));}
                @if (item != null)
                {
                    friTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == litem.ElementAt(0).Project.ID).FirstOrDefault(x => x.Date == Model.Monday.AddDays(5));}
                @if (item != null)
                {
                    satTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
            <td class="duration">
                @{item = Model.Workloads.Where(x => x.ProjectID == litem.ElementAt(0).Project.ID).FirstOrDefault(x => x.Date == Model.Monday.AddDays(6));}
                @if (item != null)
                {
                    sunTotal += item.Duration;
                    @(item.Duration.ToString("0.#"))
                }
            </td>
        </tr>
    }*@
